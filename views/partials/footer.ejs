<script>
    let formData = {};
    let vaccinationRecords = {}; // Simulated database
    let vaccinationDetails = {}; // Store vaccination details separately



    // Initialize date field with today's date
    document.addEventListener('DOMContentLoaded', function () {
        // const today = new Date().toISOString().split('T')[0];
        // document.getElementById('date').value = today;

        // // Set next due date (next year)
        // const nextYear = new Date();
        // nextYear.setFullYear(nextYear.getFullYear() + 1);
        // const nextDueDateString = nextYear.toLocaleDateString('en-US', {
        //     month: 'long',
        //     year: 'numeric'
        // });
        // document.getElementById('nextDueDate').value = nextDueDateString;
        // console.log("On load Call")
        // fetch('/booking-number', { method: 'GET' })
        //     .then(response => response.json())
        //     .then(data => {
        //         console.log('Booking Number:', data.bookingNumber);
        //         const formattedBookingNo = data.bookingNumber
        //             ? String(data.bookingNumber).padStart(3, '0')
        //             : '';
        //         document.getElementById('bookingNo').value = formattedBookingNo || '';
        //     })
        //     .catch(() => {
        //         document.getElementById('bookingNo').value = 'Error';
        //     });

        if (localStorage.getItem('BatchType') == null) {
            console.log("inside the if condition of localStorage.getItem('BatchType') == null")
            // vaccinationRecords = JSON.parse(localStorage.getItem('vaccinationRecords'));
            document.getElementById('batchNo').value = '';
        }
        else {
            console.log("Inside the else condition of localStorage.getItem('BatchType') == null")
            document.getElementById('batchNo').value = JSON.parse(localStorage.getItem('BatchType'))
        }

    });

    // Hamburger Menu Functions
    function toggleMenu() {
        console.log("Toggle Menu Called");
        const menu = document.getElementById('slidingMenu');
        const overlay = document.querySelector('.menu-overlay');
        const hamburger = document.querySelector('.hamburger-menu');

        menu.classList.toggle('active');
        overlay.classList.toggle('active');
        hamburger.classList.toggle('active');
    }

    function closeMenu() {
        const menu = document.getElementById('slidingMenu');
        const overlay = document.querySelector('.menu-overlay');
        const hamburger = document.querySelector('.hamburger-menu');

        menu.classList.remove('active');
        overlay.classList.remove('active');
        hamburger.classList.remove('active');
    }

    // Vaccine name options based on manufacturer
    const vaccineOptions = {
        'Abbott': ['Influvac Tetra'],
        'Pfizer': ['Influvac Tetra']
    };

    function updateVaccineNames() {
        const manufacturer = document.getElementById('vaccineManufacturer').value;
        const vaccineNameSelect = document.getElementById('vaccineName');

        // Clear existing options
        vaccineNameSelect.innerHTML = '<option value="">Select Vaccine Name</option>';

        if (manufacturer && vaccineOptions[manufacturer]) {
            vaccineOptions[manufacturer].forEach(name => {
                const option = document.createElement('option');
                option.value = name;
                option.textContent = name;
                vaccineNameSelect.appendChild(option);
            });
        }
    }

    function switchTab(tabName) {
        // Update tab buttons
        document.querySelectorAll('.tab').forEach(tab => {
            tab.classList.remove('active');
        });
        event.target.classList.add('active');

        // Update tab content
        document.getElementById('registration-content').style.display =
            tabName === 'registration' ? 'block' : 'none';
        document.getElementById('details-content').style.display =
            tabName === 'details' ? 'block' : 'none';
    }

    function validateRegistrationForm() {
        let isValid = true;

        // Clear previous errors
        document.querySelectorAll('.error').forEach(error => {
            error.textContent = '';
            error.style.display = 'none';
        });
        document.querySelectorAll('input, select, textarea').forEach(input => {
            input.classList.remove('input-error');
        });

        // Name validation
        const name = document.getElementById('name').value.trim();
        if (!name) {
            showError('nameError', 'Name is required');
            isValid = false;
        } else if (name.length < 2) {
            showError('nameError', 'Name must be at least 2 characters long');
            isValid = false;
        } else if (!/^[a-zA-Z\s]+$/.test(name)) {
            showError('nameError', 'Name can only contain letters and spaces');
            isValid = false;
        }

        // Age validation
        const age = document.getElementById('age').value;
        if (!age) {
            showError('ageError', 'Age is required');
            isValid = false;
        } else if (isNaN(age) || age < 1 || age > 120) {
            showError('ageError', 'Please enter a valid age between 1 and 120');
            isValid = false;
        }

        // Gender validation
        const gender = document.getElementById('gender').value;
        if (!gender) {
            showError('genderError', 'Please select a gender');
            isValid = false;
        }

        // Mobile validation
        const mobile = document.getElementById('mobile').value.trim();
        if (!mobile) {
            showError('mobileError', 'Mobile number is required');
            isValid = false;
        } else if (!/^\d{10}$/.test(mobile)) {
            showError('mobileError', 'Mobile number must be exactly 10 digits');
            isValid = false;
        }

        // Address validation
        // const address = document.getElementById('address').value.trim();
        // if (!address) {
        //     showError('addressError', 'Address is required');
        //     isValid = false;
        // } else if (address.length < 5) {
        //     showError('addressError', 'Please provide a complete address (minimum 5 characters)');
        //     isValid = false;
        // }

        // Booking number validation
        const bookingNo = document.getElementById('bookingNo').value.trim();
        if (!bookingNo) {
            showError('bookingNoError', 'Booking number is required');
            isValid = false;
        } 
        // else if (bookingNo.length < 3) {
        //     showError('bookingNoError', 'Booking number must be at least 3 characters long');
        //     isValid = false;
        // }

        // Date validation
        const selectedDate = document.getElementById('date').value;
        // const today = new Date().toISOString().split('T')[0];
        if (!selectedDate) {
            showError('dateError', 'Date is required');
            isValid = false;
        } 
        // else if (selectedDate !== today) {
        //     showError('dateError', 'Date must be today\'s date');
        //     isValid = false;
        // }

        return isValid;
    }

    function showError(elementId, message) {
        const errorElement = document.getElementById(elementId);
        const inputElement = errorElement.previousElementSibling;

        errorElement.textContent = message;
        errorElement.style.display = 'block';
        inputElement.classList.add('input-error');
    }

    function showSuccessMessage() {
        const successMessage = document.getElementById('successMessage');
        successMessage.style.display = 'block';
        setTimeout(() => {
            successMessage.style.display = 'none';
        }, 3000);
    }

    // function saveRegistrationData() {
    //     const formElements = document.getElementById('vaccinationForm').elements;
    //     formData = {};

    //     for (let element of formElements) {
    //         if (element.name) {
    //             formData[element.name] = element.value;
    //         }
    //     }

    //     // Store in simulated database
    //     vaccinationRecords[formData.bookingNo] = {
    //         name: formData.name,
    //         age: formData.age,
    //         gender: formData.gender,
    //         mobile: formData.mobile,
    //         address: formData.address,
    //         date: formData.date
    //     };

    //     console.log('Registration data saved:', formData);
    //     showSuccessMessage();
    // }

    function recordData() {
        if (Object.keys(formData).length === 0) {
            alert('Please save the form data first!');
            return;
        }

        console.log('Recording data:', formData);
        alert('Data recorded successfully!\n\nRecorded Information:\n' +
            'Name: ' + formData.name + '\n' +
            'Age: ' + formData.age + '\n' +
            'Gender: ' + formData.gender + '\n' +
            'Mobile: ' + formData.mobile + '\n' +
            'Address: ' + formData.address + '\n' +
            'Booking No: ' + formData.bookingNo + '\n' +
            'Date: ' + formData.date);
    }

    function showRegistrationModal() {
        // Get current form data (even if not saved)
        const currentData = {
            date: document.getElementById('date').value,
            name: document.getElementById('name').value,
            age: document.getElementById('age').value,
            gender: document.getElementById('gender').value,
            mobile: document.getElementById('mobile').value,
            address: document.getElementById('address').value,
            bookingNo: document.getElementById('bookingNo').value
        };

        const modalContent = document.getElementById('registrationModalContent');

        if (!currentData.name && !currentData.bookingNo) {
            modalContent.innerHTML = '<div class="modal-no-data">⚠️ No registration data available.<br>Please fill the form first.</div>';
        } else {
            let content = '';
            const fields = [
                { label: 'Date', value: currentData.date, key: 'date' },
                { label: 'Name', value: currentData.name, key: 'name' },
                { label: 'Age', value: currentData.age, key: 'age' },
                { label: 'Gender', value: currentData.gender, key: 'gender' },
                { label: 'Mobile', value: currentData.mobile, key: 'mobile' },
                { label: 'Address', value: currentData.address, key: 'address' },
                { label: 'Booking No', value: currentData.bookingNo, key: 'bookingNo' }
            ];

            fields.forEach(field => {
                const displayValue = field.value || 'Not provided';
                content += `
                        <div class="modal-data-row">
                            <div class="modal-data-label">${field.label}:</div>
                            <div class="modal-data-value">${displayValue}</div>
                        </div>
                    `;
            });
            modalContent.innerHTML = content;
        }

        document.getElementById('registrationModal').style.display = 'block';
    }

    function showDetailsModal() {
        // Get all current data from both registration and details sections
        const registrationData = {
            date: document.getElementById('date') ? document.getElementById('date').value : '',
            name: document.getElementById('detailName').value,
            age: document.getElementById('detailAge').value,
            gender: document.getElementById('detailGender').value,
            mobile: document.getElementById('detailMobile').value
        };

        const vaccinationData = {
            batchNo: document.getElementById('batchNo').value,
            vaccineManufacturer: document.getElementById('vaccineManufacturer').value,
            vaccineName: document.getElementById('vaccineName').value,
            vaccineVenue: document.getElementById('vaccineVenue').value,
            nextDueDate: document.getElementById('nextDueDate').value,
            immunisationId: document.getElementById('immunisationId').value
        };

        const modalContent = document.getElementById('detailsModalContent');

        let content = '';

        // Patient Information Section
        content += '<div class="modal-section">';
        content += '<div class="modal-section-title">👤 Patient Information</div>';

        if (registrationData.name || registrationData.age || registrationData.gender || registrationData.mobile) {
            const patientFields = [
                { label: 'Name', value: registrationData.name },
                { label: 'Age', value: registrationData.age },
                { label: 'Gender', value: registrationData.gender },
                { label: 'Mobile', value: registrationData.mobile }
            ];

            patientFields.forEach(field => {
                const displayValue = field.value || 'Not provided';
                content += `
                        <div class="modal-data-row">
                            <div class="modal-data-label">${field.label}:</div>
                            <div class="modal-data-value">${displayValue}</div>
                        </div>
                    `;
            });
        } else {
            content += '<div class="modal-no-data">No patient information available. Please search for a patient first.</div>';
        }
        content += '</div>';

        // Vaccination Details Section
        content += '<div class="modal-section">';
        content += '<div class="modal-section-title">💉 Vaccination Details</div>';

        if (vaccinationData.batchNo || vaccinationData.vaccineManufacturer || vaccinationData.vaccineName || vaccinationData.immunisationId) {
            const vaccineFields = [
                { label: 'Batch No', value: vaccinationData.batchNo },
                { label: 'Manufacturer', value: vaccinationData.vaccineManufacturer },
                { label: 'Vaccine Name', value: vaccinationData.vaccineName },
                { label: 'Venue', value: vaccinationData.vaccineVenue },
                { label: 'Next Due Date', value: vaccinationData.nextDueDate },
                { label: 'Immunisation ID', value: vaccinationData.immunisationId }
            ];

            vaccineFields.forEach(field => {
                const displayValue = field.value || 'Not provided';
                content += `
                        <div class="modal-data-row">
                            <div class="modal-data-label">${field.label}:</div>
                            <div class="modal-data-value">${displayValue}</div>
                        </div>
                    `;
            });
        } else {
            content += '<div class="modal-no-data">No vaccination details available. Please fill the vaccination information.</div>';
        }
        content += '</div>';

        modalContent.innerHTML = content;
        document.getElementById('detailsModal').style.display = 'block';
    }

    function closeModal(modalId) {
        document.getElementById(modalId).style.display = 'none';
    }

    // Close modal when clicking outside of it
    window.onclick = function (event) {
        const registrationModal = document.getElementById('registrationModal');
        const detailsModal = document.getElementById('detailsModal');

        if (event.target === registrationModal) {
            registrationModal.style.display = 'none';
        }
        if (event.target === detailsModal) {
            detailsModal.style.display = 'none';
        }
    }

    // Close modal with Escape key
    document.addEventListener('keydown', function (event) {
        if (event.key === 'Escape') {
            closeModal('registrationModal');
            closeModal('detailsModal');
            closeMenu();
        }
    });

    function searchRecord() {
        const searchBookingNo = document.getElementById('searchBookingNo').value.trim();
        const searchName = document.getElementById('searchName').value.trim();
        let query = '';
        if (searchBookingNo || searchName) {
            query = '?';
            if (searchBookingNo) query += `bookingNo=${encodeURIComponent(searchBookingNo)}`;
            if (searchBookingNo && searchName) query += '&';
            if (searchName) query += `name=${encodeURIComponent(searchName)}`;
        }

        fetch(`/search${query}`)
            .then(response => response.json())
            .then(data => {
                console.log('Search result:', data);
                if (data && data.message !== 'Record not found') {
                    document.getElementById('detailName').value = data.name || '';
                    document.getElementById('detailAge').value = data.age || '';
                    document.getElementById('detailGender').value = data.gender || '';
                    document.getElementById('detailMobile').value = data.mobile || '';
                    // Set next due date (next year)
                    const nextYear = new Date();
                    nextYear.setFullYear(nextYear.getFullYear() + 1);
                    const nextDueDateString = nextYear.toLocaleDateString('en-US', {
                        month: 'long',
                        year: 'numeric'
                    });
                    document.getElementById('nextDueDate').value = nextDueDateString;
                } else {
                    alert('No record found.');
                }
            })
            .catch(() => {
                alert('Error searching record.');
            });
    }

    // Store initial values
    let initialDetails = {};

    function storeInitialDetails() {
        const fields = ['detailName', 'detailAge', 'detailGender', 'detailMobile'];
        fields.forEach(id => {
            initialDetails[id] = document.getElementById(id).value;
        });
    }

    function checkDetailsChanged() {
        const fields = ['detailName', 'detailAge', 'detailGender', 'detailMobile'];
        let changed = false;
        for (let id of fields) {
            const el = document.getElementById(id);
            if (el.value !== initialDetails[id]) {
                changed = true;
                break;
            }
        }
        document.getElementById('updateDetailsBtn').disabled = !changed;
    }

    // Optionally, after update, reset initial values
    async function updateDetails() {
        // ... your update logic here ...
        // After successful update:
        storeInitialDetails();
        document.getElementById('updateDetailsBtn').disabled = true;
        // Get updated values from input fields
        const details = {
            name: document.getElementById('detailName').value,
            age: document.getElementById('detailAge').value,
            gender: document.getElementById('detailGender').value,
            mobile: document.getElementById('detailMobile').value
        };

        // Get booking number from searchBookingNo input
        const bookingNo = document.getElementById('searchBookingNo').value.trim();

        // Call the /details API to update details
        if (bookingNo) {
            try {
                const response = await fetch('/details', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        bookingNo: bookingNo,
                        ...details
                    }),
                });
                const data = await response.json();
                if (response.ok) {
                    alert('Patient details updated successfully!');
                } else {
                    alert('Error updating patient details.');
                }
            } catch (error) {
                alert('Error updating patient details.');
                console.error(error);
            }
        } else {
            alert('Booking number is required to update details.');
        }
    }

    function clearSearch() {
        document.getElementById('searchBookingNo').value = '';
        document.getElementById('searchName').value = '';
        clearDetailsView();
    }

    function clearDetailsView() {
        document.getElementById('detailName').value = '';
        document.getElementById('detailAge').value = '';
        document.getElementById('detailGender').value = '';
        document.getElementById('detailMobile').value = '';
    }

    function validateImmunisationId() {
        const immunisationId = document.getElementById('immunisationId').value.trim();
        const errorElement = document.getElementById('immunisationIdError');

        if (typeof immunisationId !== 'string' || immunisationId.trim() === '') {
            errorElement.textContent = 'Immunisation ID must be a non-empty string';
            errorElement.style.display = 'block';
            document.getElementById('immunisationId').classList.add('input-error');
            return false;
        } else {
            errorElement.style.display = 'none';
            document.getElementById('immunisationId').classList.remove('input-error');
            return true;
        }
    }

    async function saveVaccinationDetails() {
        if (!validateImmunisationId()) {
            return;
        }

        // if (!validateBatchNo()) {
        //     return;
        // }

        // if (!validateManufacturerAndVaccineName()) {
        //     return;
        // }

        const details = {
            batchNo: document.getElementById('batchNo').value,
            vaccineManufacturer: document.getElementById('vaccineManufacturer').value,
            vaccineName: document.getElementById('vaccineName').value,
            vaccineVenue: document.getElementById('vaccineVenue').value,
            nextDueDate: document.getElementById('nextDueDate').value,
            immunisationId: document.getElementById('immunisationId').value
        };

        // Find the booking number of the current patient
        const currentPatientName = document.getElementById('detailName').value;
        // let bookingNoForDetails = null;

        // for (let bookingNo in vaccinationRecords) {
        //     if (vaccinationRecords[bookingNo].name === currentPatientName) {
        //         bookingNoForDetails = bookingNo;
        //         break;
        //     }
        // }

        // if (bookingNoForDetails) {
        //     vaccinationDetails[bookingNoForDetails] = details;
        // }
        const bookingNoForDetails = document.getElementById('searchBookingNo').value.trim().toString();

        if (details.batchNo || details.vaccineManufacturer || details.vaccineName) {
            console.log('Updating details for booking number:', bookingNoForDetails, " details:", details);
            try {
                const response = await fetch('/details', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        bookingNo: bookingNoForDetails,
                        ...details
                    }),
                });
                const data = await response.json();
                if (response.ok) {
                    try {
                        // Call the /batch-number API if batch number is provided   
                        if (details.batchNo) {
                            console.log("Inside the fetch call of /batch-number API", details.batchNo);
                            const findOne = await fetch(`/batch-number/${encodeURIComponent(details.batchNo)}`, {
                                method: 'GET',
                                headers: {
                                    'Content-Type': 'application/json',
                                }
                            });
                            console.log('Batch number fetch response:', findOne);
                            const batchData = await findOne.json();
                            console.log('Batch number data:', batchData);
                            if (batchData) {
                                console.log('Batch number found:', batchData);
                                localStorage.setItem('BatchType', JSON.stringify(batchData.batchNumber));
                            }
                            if (!batchData) {
                                console.log('Batch number not found, creating new batch number', details.batchNo);
                                const update = await fetch('/batch-number', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify({ batchNumber: details.batchNo })
                                });

                                const batchData = await update.json();
                                console.log('New batch number created:', batchData.batchNumber.batchNumber);
                                localStorage.setItem('BatchType', JSON.stringify(batchData.batchNumber.batchNumber));
                            }
                        }

                        if (details.vaccineManufacturer) {
                            console.log("Inside the fetch call of /vaccine-manufacturer API", details.vaccineManufacturer);
                            const updateOne = await fetch(`/manufacturers/${encodeURIComponent(details.vaccineManufacturer)}`, {
                                method: 'PUT',
                                headers: {
                                    'Content-Type': 'application/json',
                                }
                            });
                        }
                    } catch (error) {
                        console.error('Error calling /batch-number API:', error);
                        // alert('Vaccination details could not be saved. Please try again.');
                    }
                }
                console.log('Details API response:', data);
                alert('Vaccination details saved successfully!');
            } catch (error) {
                console.error('Error calling /details API:', error);
                alert('Vaccination details could not be saved. Please try again.');
            }
        }

        console.log('Vaccination details saved:', details);
        clearVaccinationDetailsFields()
    }

    function clearVaccinationDetailsFields() {
        clearSearch()
        // For dropdowns, set to first option (usually empty or "Select")
        document.getElementById('vaccineManufacturer').selectedIndex = 0;
        document.getElementById('vaccineName').selectedIndex = 0;
        // For text inputs
        document.getElementById('immunisationId').value = '';
        document.getElementById('nextDueDate').value = '';
    }

    function viewRecord() {
        // Get current values from all fields
        const recordData = {
            // Search criteria
            searchBookingNo: document.getElementById('searchBookingNo').value,
            searchName: document.getElementById('searchName').value,

            // Patient details
            name: document.getElementById('detailName').value,
            age: document.getElementById('detailAge').value,
            gender: document.getElementById('detailGender').value,
            mobile: document.getElementById('detailMobile').value,

            // Vaccination details
            batchNo: document.getElementById('batchNo').value,
            vaccineManufacturer: document.getElementById('vaccineManufacturer').value,
            vaccineName: document.getElementById('vaccineName').value,
            vaccineVenue: document.getElementById('vaccineVenue').value,
            nextDueDate: document.getElementById('nextDueDate').value,
            immunisationId: document.getElementById('immunisationId').value
        };

        // Create a formatted display of the record
        let recordDisplay = "📋 VACCINATION RECORD VIEW\n";
        recordDisplay += "═══════════════════════════════\n\n";

        if (recordData.name) {
            recordDisplay += "👤 PATIENT INFORMATION:\n";
            recordDisplay += `Name: ${recordData.name}\n`;
            recordDisplay += `Age: ${recordData.age}\n`;
            recordDisplay += `Gender: ${recordData.gender}\n`;
            recordDisplay += `Mobile: ${recordData.mobile}\n\n`;
        }

        if (recordData.batchNo || recordData.vaccineManufacturer || recordData.vaccineName) {
            recordDisplay += "💉 VACCINATION DETAILS:\n";
            if (recordData.batchNo) recordDisplay += `Batch No: ${recordData.batchNo}\n`;
            if (recordData.vaccineManufacturer) recordDisplay += `Manufacturer: ${recordData.vaccineManufacturer}\n`;
            if (recordData.vaccineName) recordDisplay += `Vaccine Name: ${recordData.vaccineName}\n`;
            if (recordData.vaccineVenue) recordDisplay += `Venue: ${recordData.vaccineVenue}\n`;
            if (recordData.nextDueDate) recordDisplay += `Next Due Date: ${recordData.nextDueDate}\n`;
            if (recordData.immunisationId) recordDisplay += `Immunisation ID: ${recordData.immunisationId}\n`;
        }

        if (!recordData.name && !recordData.batchNo) {
            recordDisplay += "⚠️ No record data available.\n";
            recordDisplay += "Please search for a patient first or enter vaccination details.";
        }

        console.log('Viewing record:', recordData);
        alert(recordDisplay);
    }

    // Form submission handler for registration
    // document.getElementById('vaccinationForm').addEventListener('submit', function (e) {
    //     e.preventDefault();

    //     if (validateRegistrationForm()) {
    //         saveRegistrationData();
    //     }
    // });

    // Real-time validation on input
    document.querySelectorAll('input, select, textarea').forEach(input => {
        input.addEventListener('blur', function () {
            if (this.value.trim()) {
                if (this.id === 'immunisationId') {
                    validateImmunisationId();
                } else if (document.getElementById('vaccinationForm').contains(this)) {
                    validateRegistrationForm();
                }
            }
        });

        input.addEventListener('input', function () {
            if (this.classList.contains('input-error')) {
                this.classList.remove('input-error');
                const errorId = this.id + 'Error';
                const errorElement = document.getElementById(errorId);
                if (errorElement) {
                    errorElement.style.display = 'none';
                }
            }
        });
    });

    // Mobile number input restriction
    document.getElementById('mobile').addEventListener('input', function (e) {
        this.value = this.value.replace(/[^0-9]/g, '');
    });

    // Age input restriction
    document.getElementById('age').addEventListener('input', function (e) {
        this.value = this.value.replace(/[^0-9]/g, '');
    });

    // Search booking number input restriction
    document.getElementById('searchBookingNo').addEventListener('input', function (e) {
        this.value = this.value.replace(/[^0-9]/g, '');
    });

    // Immunisation ID real-time validation
    document.getElementById('immunisationId').addEventListener('input', function (e) {
        validateImmunisationId();
    });

    async function autoGenerateId() {
        let manufacturerData;
        let paddedCount = '';
        const currentYear = new Date().getFullYear();
        const manufacturer = document.getElementById('vaccineManufacturer').value;
        console.log("Manufacturer selected:", manufacturer);
        if (manufacturer) {
            // Call the /manufacturers/:name API with manufacturer value
            try {
                const manufacturerApiResponse = await fetch(`/manufacturers/${encodeURIComponent(manufacturer)}`, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });
                manufacturerData = await manufacturerApiResponse.json();
                console.log('Manufacturer API response:', manufacturerData);
                // You can use the manufacturerData as needed here
            } catch (error) {
                console.error('Error calling /manufacturers API:', error);
            }
            paddedCount = manufacturerData.count < 10
                ? '00' + manufacturerData.count
                : manufacturerData.count < 100
                    ? '0' + manufacturerData.count
                    : manufacturerData.count;
        }
        let suffix = '';
        if (manufacturer === 'Abbott') {
            suffix = 'A';
        } else if (manufacturer === 'Pfizer') {
            suffix = 'F';
        }
        // return `${currentYear}-${suffix}-${paddedCount}`;
        document.getElementById('immunisationId').value = `${currentYear}-${suffix}-${paddedCount}`
    }


    document.getElementById('vaccinationForm').addEventListener('submit', async function (e) {
        e.preventDefault();

        if (validateRegistrationForm()) {
            const formData = new FormData(this);
            const data = Object.fromEntries(formData.entries());
           
            try {
                const response = await fetch('/register', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data),
                });
                // const responseData = await response.json();
                console.log('Response from server:', response);
                if (response.ok) {
                    console.log('Registration successful:', response);
                    showSuccessMessage();
                    this.reset();
                } 
                else {
                    const errorData = await response.json();
                    console.log("printintg here errorData: ", errorData.error.code, errorData.error.message);
                    if(errorData.error && errorData.error.code === 11000) {
                        alert('Booking number already exists. Please try again with a different booking number.');
                    } else {
                        alert('An error occurred while saving the data. Please try again.');
                    }
                }
                // if (response.ok) {
                //     showSuccessMessage();
                //     const putResponse = await fetch('/booking-number', { method: 'PUT' });
                //     if (putResponse.ok) {
                //         const bookingData = await putResponse.json();
                //         console.log('Booking Number updated:', bookingData.bookingNumber);
                //     } else {
                //         alert('Error updating booking number.');
                //     }
                //     this.reset();

                //     // After reset, fetch new booking number
                //     setTimeout(async () => {
                //         try {
                //             console.log("Inside the fetch call of get booking-NUmber")
                //             const getResponse = await fetch('/booking-number', { method: 'GET' });
                //             if (getResponse.ok) {
                //                 const newBookingData = await getResponse.json();
                //                 const formattedBookingNo = newBookingData.bookingNumber
                //                     ? String(newBookingData.bookingNumber).padStart(3, '0')
                //                     : '';
                //                 document.getElementById('bookingNo').value = formattedBookingNo || '';

                //             } else {
                //                 document.getElementById('bookingNo').value = 'Error';
                //             }
                //         } catch {
                //             document.getElementById('bookingNo').value = 'Error';
                //         }
                //     }, 2000);

                //     // Filling up with today's date
                //     const today = new Date().toISOString().split('T')[0];
                //     document.getElementById('date').value = today;
                //     console.log("Date aded with today's date: ", today);
                //     // Set next due date (next year)
                //     const nextYear = new Date();
                //     nextYear.setFullYear(nextYear.getFullYear() + 1);
                //     const nextDueDateString = nextYear.toLocaleDateString('en-US', {
                //         month: 'long',
                //         year: 'numeric'
                //     });
                //     document.getElementById('nextDueDate').value = nextDueDateString;
                // } else {
                //     const errorData = await response.json();
                //     alert(`Error: ${errorData.message}`);
                // }
            } catch (error) {
                console.log('Error during registration:', error);
            }
        }
        else {
            alert('Please correct the errors in the form before submitting.');
        }
    });

</script>
</body>

</html>